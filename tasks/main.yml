---
# roles/ansible_role_dockerhost/tasks/main.yml

- name: Docker APT Repository Setup
  tags: docker
  block:
    - name: Fail if system is not APT-based
      ansible.builtin.assert:
        that:
          - ansible_os_family == 'Debian'
        fail_msg: "This role only supports Debian/Ubuntu APT-based systems!"

    - name: Install required APT packages
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: true

    - name: Ensure keyring directory exists at /etc/apt/keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: 'u=rwx,g=rx,o=rx'

    - name: Download Docker's official GPG key (ASCII format)
      ansible.builtin.get_url:
        url: "{{ ansible_role_dockerhost_gpg_key_url }}"
        dest: /etc/apt/keyrings/docker.asc
        mode: 'u=rw,g=r,o=r'

    - name: Set permissions for Docker GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.asc
        mode: 'u=rw,g=r,o=r'

    - name: Check Docker key exists
      ansible.builtin.stat:
        path: /etc/apt/keyrings/docker.asc
      register: docker_key

    - name: Fail if Docker GPG key missing
      ansible.builtin.fail:
        msg: "Docker GPG Key not found!"
      when: not docker_key.stat.exists

    - name: Determine Docker architecture dynamically
      ansible.builtin.set_fact:
        ansible_role_dockerhost_architecture: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

    - name: Set up Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_role_dockerhost_architecture }} signed-by=/etc/apt/keyrings/docker.asc] {{ ansible_role_dockerhost_repo_url }} {{ ansible_lsb.codename }} {{ ansible_role_dockerhost_release_channel }}"
        state: present
        filename: docker

    - name: Clean APT cache after adding Docker repository
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 0
        force: true
      changed_when: false
      failed_when: false

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true
      changed_when: false
      failed_when: false

- name: Install Docker
  tags: docker
  block:
    - name: Install Docker Engine, CLI, Compose Plugin
      ansible.builtin.apt:
        name: "{{ ansible_role_dockerhost_packages }}"
        state: latest

    - name: Ensure Docker service is enabled and running
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true
      notify: Restart Docker

- name: Sanity Checks - Verify Docker Installation
  tags: docker
  block:
    - name: Check Docker CLI version
      ansible.builtin.command: docker --version
      register: docker_version_output
      changed_when: false
      failed_when: docker_version_output.rc != 0

    - name: Display Docker CLI version
      ansible.builtin.debug:
        msg: "Docker CLI Version: {{ docker_version_output.stdout }}"

    - name: Check Docker Compose plugin version
      ansible.builtin.command: docker compose version
      register: compose_version_output
      changed_when: false
      failed_when: compose_version_output.rc != 0

    - name: Display Docker Compose plugin version
      ansible.builtin.debug:
        msg: "Docker Compose Plugin Version: {{ compose_version_output.stdout }}"
